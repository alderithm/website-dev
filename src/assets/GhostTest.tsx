/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.SkinnedMesh
    root: THREE.Bone
    ['MCH-torsoparent']: THREE.Bone
    ['MCH-front_foot_ikparentL']: THREE.Bone
    ['MCH-front_thigh_ik_targetparentL']: THREE.Bone
    ['MCH-front_foot_ikparentR']: THREE.Bone
    ['MCH-front_thigh_ik_targetparentR']: THREE.Bone
    ['MCH-foot_ikparentL']: THREE.Bone
    ['MCH-thigh_ik_targetparentL']: THREE.Bone
    ['MCH-foot_ikparentR']: THREE.Bone
    ['MCH-thigh_ik_targetparentR']: THREE.Bone
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/GhostTest.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 4.45, -3.39]} rotation={[1.28, 0, 0]}>
        <group rotation={[-2.4, 0, 0]}>
          <group position={[0, 0.64, 0]} rotation={[0.63, 0, 0]}>
            <group position={[0, 0.67, 0]} rotation={[1.23, 0, 0]} />
          </group>
        </group>
        <group position={[0, 0.59, 0]} rotation={[0.45, 0, 0]}>
          <group position={[0, 1.01, 0]} rotation={[-0.12, 0, 0]}>
            <group position={[0, 0.85, 0]} rotation={[-0.2, 0, 0]}>
              <group position={[0, 0.75, 0]} rotation={[-0.01, 0, 0]}>
                <group position={[0, 1.47, 0]} rotation={[-0.28, 0, 0]}>
                  <group position={[0, 0.42, 0]} />
                </group>
                <group position={[0.07, 1, -0.32]} rotation={[1.35, 0.16, -0.33]}>
                  <group position={[-0.04, 1.29, 0.08]} rotation={[0.91, 0.17, 0.43]}>
                    <group position={[0, 1.33, 0]} rotation={[-0.5, 0.01, -0.09]}>
                      <group position={[0, 1.69, 0]} rotation={[-0.09, 0.04, 0.02]} />
                    </group>
                  </group>
                </group>
                <group position={[-0.07, 1, -0.32]} rotation={[1.35, -0.16, 0.33]}>
                  <group position={[0.04, 1.29, 0.08]} rotation={[0.91, -0.17, -0.43]}>
                    <group position={[0, 1.33, 0]} rotation={[-0.5, -0.01, 0.09]}>
                      <group position={[0, 1.69, 0]} rotation={[-0.09, -0.04, -0.02]} />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
          <group position={[0.4, -0.46, 0.52]} rotation={[1.01, 0, 0.05]}>
            <group position={[0, 0.9, 0]} rotation={[0.74, -0.05, 0]}>
              <group position={[0, 1.91, 0]} rotation={[-0.4, 0.04, -0.06]} />
            </group>
          </group>
          <group position={[-0.4, -0.46, 0.52]} rotation={[1.01, 0, -0.05]}>
            <group position={[0, 0.9, 0]} rotation={[0.74, 0.05, 0]}>
              <group position={[0, 1.91, 0]} rotation={[-0.4, -0.04, 0.06]} />
            </group>
          </group>
        </group>
      </group>
      <primitive object={nodes.root} />
      <primitive object={nodes['MCH-torsoparent']} />
      <primitive object={nodes['MCH-front_foot_ikparentL']} />
      <primitive object={nodes['MCH-front_thigh_ik_targetparentL']} />
      <primitive object={nodes['MCH-front_foot_ikparentR']} />
      <primitive object={nodes['MCH-front_thigh_ik_targetparentR']} />
      <primitive object={nodes['MCH-foot_ikparentL']} />
      <primitive object={nodes['MCH-thigh_ik_targetparentL']} />
      <primitive object={nodes['MCH-foot_ikparentR']} />
      <primitive object={nodes['MCH-thigh_ik_targetparentR']} />
      <skinnedMesh
        castShadow
        geometry={nodes.Plane.geometry}
        material={materials['Material.001']}
        skeleton={nodes.Plane.skeleton}
      />
    </group>
  )
}

useGLTF.preload('/GhostTest.glb')
