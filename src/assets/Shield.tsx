/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/shield.glb') as GLTFResult
  // useFrame((state, delta) => (nodes.Plane.geometry.rotateZ(0.001)))

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh 
        castShadow
        geometry={nodes.Plane.geometry} 
        material={materials['Material.001']} 
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
        scale={50}
        />
    </group>
  )
}

useGLTF.preload('/shield.glb')
